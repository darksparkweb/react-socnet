{"version":3,"sources":["components/Profile/ProfileData/ProfileInfo.module.css","components/Profile/Profile.module.css","components/Profile/TheWall/TheWall.module.css","components/Profile/TheWall/Post/Post.module.css","components/Profile/TheWall/Post/buttons/Buttons.module.css","components/Profile/TheWall/Post/buttons/Like.module.css","components/Profile/TheWall/Post/buttons/Dislike.module.css","components/Profile/ProfileData/ProfileStatus.module.css","components/Profile/ProfileData/ProfileTextForm.module.css","components/Profile/TheWall/Post/buttons/Like.jsx","components/Profile/TheWall/Post/buttons/Dislike.jsx","components/Profile/TheWall/Post/buttons/Buttons.jsx","components/Profile/TheWall/Post/Post.jsx","components/Profile/TheWall/TheWall.jsx","components/Profile/TheWall/TheWallContainer.jsx","components/Profile/ProfileData/ProfileStatusWithHooks.jsx","img/lfj.png","img/working.png","components/Profile/ProfileData/Contacts/Contacts.jsx","components/Profile/ProfileData/ProfileText.js","components/Profile/ProfileData/ProfileTextForm.jsx","components/Profile/ProfileData/ProfileInfo.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["module","exports","Like","props","className","s","like","icon","count","Dislike","dislike","Buttons","but","likes","dislikes","Post","post","avatar","text","message","maxLength10","maxLength","AddPostReduxForm","reduxForm","form","onSubmit","handleSubmit","input","Field","component","Textarea","validate","required","name","placeholder","rows","button","TheWall","React","memo","TheWallElement","posts","map","id","lineName","values","addPost","theWallPost","TheWallContainer","connect","state","profilePage","dispatch","addPostActionCreator","ProfileStatusWithHooks","useState","editMode","setEditMode","status","setStatus","useEffect","statusArea","onClick","isOwner","size","type","onChange","e","currentTarget","value","onBlur","updateStatus","autoFocus","Contacts","contactTitle","contactValue","rel","target","href","ProfileText","profile","goToEditMode","userInfo","userText","fullName","aboutMe","lfj","alt","userId","job","src","lookingForAJob","working","lookingForAJobDescription","Object","keys","contacts","key","ProfileTextFormReduxForm","error","createField","Input","style","formError","ProfileInfo","savePhoto","saveProfile","profileInfo","userBlocks","htmlFor","photos","large","userPhoto","ava","accept","inputImg","files","length","initialValues","formData","then","Profile","content","ProfileContainer","userID","this","match","params","authorizedUserID","history","push","getUserProfile","getStatus","refreshProfile","prevProps","prevState","snapshot","Component","compose","auth","isAuth","withRouter"],"mappings":"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","file":"static/js/3.0746c1ed.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"profileInfo\":\"ProfileInfo_profileInfo__2DcXv\",\"inputImg\":\"ProfileInfo_inputImg__1uxVL\",\"userBlocks\":\"ProfileInfo_userBlocks__1TFYz\",\"userText\":\"ProfileInfo_userText__1VtUG\",\"userInfo\":\"ProfileInfo_userInfo__WMAkW\",\"button\":\"ProfileInfo_button__1kcLr\",\"ava\":\"ProfileInfo_ava__1ZeYI\",\"name\":\"ProfileInfo_name__3mmov\",\"text\":\"ProfileInfo_text__3HC5v\",\"job\":\"ProfileInfo_job__3PgVv\",\"lfj\":\"ProfileInfo_lfj__3-Kjh\",\"smicon\":\"ProfileInfo_smicon__2cXDe\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"Profile_content__3ki02\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"TheWall_input__2f0gE\",\"button\":\"TheWall_button__TAB0K\",\"lineName\":\"TheWall_lineName__iESsi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"post\":\"Post_post__35ENt\",\"avatar\":\"Post_avatar__17uc2\",\"text\":\"Post_text__1i7wV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"but\":\"Buttons_but__U0Mp8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"like\":\"Like_like__2vSuK\",\"text\":\"Like_text__1GBbZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dislike\":\"Dislike_dislike__25Zzm\",\"text\":\"Dislike_text__yXHvD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"statusArea\":\"ProfileStatus_statusArea__3dBU2\",\"status\":\"ProfileStatus_status__tAQu9\",\"input\":\"ProfileStatus_input__3RH1o\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"userInfo\":\"ProfileTextForm_userInfo__34R9k\",\"userText\":\"ProfileTextForm_userText__3JgPg\",\"name\":\"ProfileTextForm_name__2cHe-\",\"text\":\"ProfileTextForm_text__2PmmN\",\"lfj\":\"ProfileTextForm_lfj__yFnRQ\",\"button\":\"ProfileTextForm_button__3RiQv\"};","import React from 'react'\r\nimport s from \"./Like.module.css\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nconst Like = (props) => {\r\n  return (\r\n    <div className={s.like}>\r\n    <FontAwesomeIcon icon={['far', 'hand-spock']} /> <b>{props.count}</b>  \r\n  </div>\r\n  );\r\n};\r\n\r\nexport default Like;\r\n","import s from \"./Dislike.module.css\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nconst Dislike = (props) => {\r\n  return (\r\n    <div className={s.dislike}>\r\n      <FontAwesomeIcon icon={['far', 'thumbs-down']} /> <b>{props.count}</b>  \r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dislike;\r\n","import s from \"./Buttons.module.css\";\r\nimport Like from \"./Like\";\r\nimport Dislike from \"./Dislike\";\r\n\r\nconst Buttons = (props) => {\r\n  return (\r\n    <div className={s.but}>\r\n      <Like count={props.likes} />\r\n      <Dislike count={props.dislikes}/>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Buttons;\r\n","import s from \"./Post.module.css\";\r\nimport Buttons from \"./buttons/Buttons\";\r\n\r\nconst Post = (props) => {\r\n  return (\r\n    <div>\r\n      <div className={s.post}>\r\n        <div className={s.avatar}></div>\r\n        <div className={s.text}>{props.message}</div>\r\n      </div>\r\n      <Buttons likes={props.like} dislikes={props.dislike}/>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Post;\r\n","import React from \"react\";\r\nimport s from \"./TheWall.module.css\";\r\nimport Post from \"./Post/Post\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {maxLength, required} from \"../../../Utils/Validators/validators\";\r\nimport {Textarea} from \"../../common/FormsControls/formsControls\";\r\n\r\nconst maxLength10 = maxLength(10)\r\n\r\nconst AddPostForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit} className={s.input}>\r\n            <Field\r\n                component={Textarea}\r\n                validate={[required, maxLength10]}\r\n                name={\"theWallPost\"}\r\n                placeholder=\"Enter your post\"\r\n                // cols=\"58\"\r\n                rows=\"5\"\r\n            />\r\n            <button className={s.button}>\r\n                Add post\r\n            </button>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst AddPostReduxForm = reduxForm({form: 'AddPost'})(AddPostForm)\r\n\r\n\r\nconst TheWall = React.memo(props => {\r\n\r\n    let TheWallElement = props.posts.map((posts) => (\r\n        <Post key={posts.id} message={posts.message} like={posts.like} dislike={posts.dislike}/>));\r\n\r\n    const onSubmit = (values) => {\r\n        props.addPost(values.theWallPost)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className={s.lineName}>The WALL</div>\r\n            <AddPostReduxForm onSubmit={onSubmit}/>\r\n            {TheWallElement}\r\n        </div>\r\n    );\r\n})\r\n\r\nexport default TheWall;\r\n","import TheWall from \"./TheWall\";\r\nimport {addPostActionCreator} from \"../../../Redux/profileReducer\";\r\nimport {connect} from \"react-redux\";\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        posts: state.profilePage.posts\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addPost: (theWallPost) => {\r\n            dispatch(addPostActionCreator(theWallPost));\r\n    }\r\n    }\r\n}\r\n\r\nconst TheWallContainer = connect (mapStateToProps, mapDispatchToProps)(TheWall);\r\n\r\nexport default TheWallContainer;\r\n","import React, {useEffect, useState} from 'react'\r\nimport s from \"./ProfileStatus.module.css\";\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n\r\n\r\n    let [editMode, setEditMode] = useState(false)\r\n    let [status, setStatus] = useState(props.status)\r\n\r\n    useEffect( () => {\r\n        setStatus(props.status)\r\n    }, [props.status])\r\n\r\n    const activateEditMode = () => {\r\n        {props.isOwner &&\r\n        setEditMode(true)\r\n        }\r\n    }\r\n    const deactivateEditMode = () => {\r\n\r\n        setEditMode(false)\r\n        props.updateStatus(status)\r\n    }\r\n\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {!editMode &&\r\n            <div className={s.statusArea}>\r\n                <span onClick={activateEditMode} className={s.status}>{props.status || \"Enter your status here\"}</span>\r\n            </div>\r\n            }\r\n            {editMode &&\r\n            <div>\r\n                <input\r\n                    size={\"70\"}\r\n                    placeholder={\"Enter your status here\"}\r\n                    type={\"text\"}\r\n                    onChange={onStatusChange}\r\n                    onBlur={deactivateEditMode}\r\n                    className={s.input}\r\n                    autoFocus={true}\r\n                    value={status}>\r\n                </input>\r\n            </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileStatusWithHooks;","export default __webpack_public_path__ + \"static/media/lfj.53cc8269.png\";","export default __webpack_public_path__ + \"static/media/working.5c5229ea.png\";","import s from \"../ProfileInfo.module.css\";\r\nimport React from \"react\";\r\n\r\nconst Contacts = ({contactTitle, contactValue}) => {\r\n    return <div>\r\n        {(contactValue) &&\r\n        <div className={s.text}><a rel=\"noopener noreferrer\" target=\"_blank\"\r\n                                   href={contactValue}>{contactTitle}</a></div>}\r\n        {/*{(profile.contacts.vk) &&*/}\r\n        {/*<div className={s.text}><a rel=\"noopener noreferrer\" target=\"_blank\"*/}\r\n        {/*                           href={\"http://\" + profile.contacts.vk}><FontAwesomeIcon*/}\r\n        {/*    icon={['fab', 'vk']}/></a></div>}*/}\r\n        {/*{(profile.contacts.instagram) &&*/}\r\n        {/*<div className={s.text}><a rel=\"noopener noreferrer\" target=\"_blank\"*/}\r\n        {/*                           href={\"http://\" + profile.contacts.instagram}><FontAwesomeIcon*/}\r\n        {/*    icon={['fab', 'instagram']}/></a></div>}*/}\r\n        {/*{(profile.contacts.mainLink) &&*/}\r\n        {/*<div className={s.text}><a rel=\"noopener noreferrer\" target=\"_blank\"*/}\r\n        {/*                           href={\"http://\" + profile.contacts.mainLink}><FontAwesomeIcon*/}\r\n        {/*    icon={['fab', 'linkedin']}/></a></div>}*/}\r\n        {/*{(profile.contacts.youtube) &&*/}\r\n        {/*<div className={s.text}><a rel=\"noopener noreferrer\" target=\"_blank\"*/}\r\n        {/*                           href={\"http://\" + profile.contacts.youtube}><FontAwesomeIcon*/}\r\n        {/*    icon={['fab', 'youtube']}/></a></div>}*/}\r\n        {/*{(profile.contacts.twitter) &&*/}\r\n        {/*<div className={s.text}><a rel=\"noopener noreferrer\" target=\"_blank\"*/}\r\n        {/*                           href={\"http://\" + profile.contacts.twitter}><FontAwesomeIcon*/}\r\n        {/*    icon={['fab', 'twitter']}/></a></div>}*/}\r\n    </div>\r\n}\r\n\r\nexport default Contacts","import lfj from \"../../../img/lfj.png\";\r\nimport working from \"../../../img/working.png\";\r\nimport React from \"react\";\r\nimport s from \"./ProfileInfo.module.css\";\r\nimport Contacts from \"./Contacts/Contacts\";\r\n\r\nconst ProfileText = ({profile, isOwner, goToEditMode}) => {\r\n    return (\r\n        <div className={s.userInfo}>\r\n\r\n            <div className={s.userText}>\r\n                <div className={s.name}>{profile.fullName}</div>\r\n                <div className={s.text}>{profile.aboutMe}</div>\r\n                <div className={s.lfj}><img alt={profile.userId} className={s.job}\r\n                                            src={profile.lookingForAJob ? lfj : working}/>\r\n                    {profile.lookingForAJob && <div>{profile.lookingForAJobDescription}</div>}\r\n                </div>\r\n\r\n            </div>\r\n            <div className={s.userText}>\r\n                {Object.keys(profile.contacts).map(key => {\r\n                    return <Contacts contactTitle={key} contactValue={profile.contacts[key]}/>\r\n                })}\r\n            </div>\r\n            <div className={s.button}>{isOwner && <button onClick={goToEditMode}>Edit</button>}</div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileText","import s from \"./ProfileTextForm.module.css\";\r\nimport React from \"react\";\r\nimport {createField, Input, Textarea} from \"../../common/FormsControls/formsControls\";\r\nimport {reduxForm} from \"redux-form\";\r\nimport style from \"../../common/FormsControls/formsControls.module.css\";\r\n\r\nconst ProfileTextForm = ({handleSubmit, profile, error}) => {\r\n    return (\r\n        <form className={s.userInfo} onSubmit={handleSubmit}>\r\n\r\n            <div className={s.userText}>\r\n                <div className={s.name}>{createField(\"Full name\", \"fullName\", [], Input )}</div>\r\n                <div className={s.lfj}>Looking for a Job?{createField(\"LFJ\", \"lookingForAJob\", [], Input,  'checkbox')}</div>\r\n                <div className={s.text}>{createField(\"About Me\", \"aboutMe\", [], Textarea, \"text\" )}</div>\r\n                <div className={s.name}>{createField(\"My Skills\", \"lookingForAJobDescription\", [], Textarea, \"text\" )}</div>\r\n            </div>\r\n            <div className={s.userText}>\r\n\r\n                {Object.keys(profile.contacts).map(key => {\r\n                    return <div>\r\n                        {createField(key, \"contacts.\" + key, [], Input, \"text\" )}\r\n                    </div>\r\n                })}\r\n                {error &&\r\n                <div className={style.formError}>\r\n                    {error}\r\n                </div>\r\n                }\r\n            </div>\r\n\r\n            <div className={s.button}><button>save</button></div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst ProfileTextFormReduxForm = reduxForm ({form: 'edit-profile'})(ProfileTextForm)\r\n\r\nexport default ProfileTextFormReduxForm","import React, {useState} from 'react'\r\nimport s from \"./ProfileInfo.module.css\";\r\nimport Loader from \"../../common/preloader\";\r\nimport userPhoto from \"../../../img/user.png\";\r\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\r\nimport ProfileText from \"./ProfileText\";\r\nimport ProfileTextFormReduxForm from \"./ProfileTextForm\";\r\n\r\nconst ProfileInfo = ({savePhoto, isOwner, profile, status, updateStatus, saveProfile}) => {\r\n    let [editMode, setEditMode] = useState(false)\r\n\r\n    if (!profile) {\r\n        return <Loader/>\r\n    }\r\n\r\n    const onMainPhotoSelected = (e) => {\r\n        if (e.target.files.length) {\r\n            savePhoto(e.target.files[0])\r\n        }\r\n    }\r\n\r\n    const onSubmit = (formData) => {\r\n        saveProfile(formData).then (\r\n            () => {\r\n                setEditMode (false)\r\n            }\r\n        )\r\n        //;\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <ProfileStatusWithHooks status={status} updateStatus={updateStatus} isOwner={isOwner}/>\r\n            <div className={s.profileInfo}>\r\n                <div className={s.userBlocks}>\r\n                    <label htmlFor=\"file\"><img\r\n                        alt={profile.userId}\r\n                        src={profile.photos.large != null ? profile.photos.large : userPhoto}\r\n                        className={s.ava}\r\n                    /></label>\r\n                    {isOwner &&\r\n                    <input type={\"file\"} accept=\"image/png, .jpeg, .jpg, image/gif\" id={\"file\"} className={s.inputImg}\r\n                           onChange={onMainPhotoSelected}/>}\r\n                </div>\r\n                <div className={s.userBlocks}>\r\n                    { editMode ? <ProfileTextFormReduxForm initialValues={profile} onSubmit={onSubmit} profile={profile} /> :\r\n                    <ProfileText goToEditMode={() => {setEditMode(true)}} profile={profile} isOwner={isOwner}/>\r\n                    }\r\n                </div>\r\n\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default ProfileInfo;","import s from \"./Profile.module.css\";\r\nimport TheWallContainer from \"./TheWall/TheWallContainer\";\r\nimport ProfileInfo from \"./ProfileData/ProfileInfo\";\r\nimport React from \"react\";\r\n\r\nconst Profile = (props) => {\r\n\r\n  return (\r\n    <div className={s.content}>\r\n      <ProfileInfo\r\n          saveProfile={props.saveProfile}\r\n          savePhoto={props.savePhoto}\r\n          isOwner={props.isOwner}\r\n          profile={props.profile}\r\n          status={props.status}\r\n          updateStatus={props.updateStatus}/>\r\n      <TheWallContainer/>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n","import React from \"react\";\r\nimport Profile from \"./Profile\";\r\nimport {getStatus, getUserProfile, savePhoto, saveProfile, updateStatus} from \"../../Redux/profileReducer\";\r\nimport {connect} from \"react-redux\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport {compose} from \"redux\";\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n    refreshProfile() {\r\n        let userID = this.props.match.params.userID;\r\n        if (!userID) {\r\n            userID = this.props.authorizedUserID;\r\n            if (!userID) {\r\n                this.props.history.push(\"/login\")\r\n            }\r\n        }\r\n        this.props.getUserProfile(userID)\r\n        this.props.getStatus(userID)\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.refreshProfile()\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if (this.props.match.params.userID !== prevProps.match.params.userID) {\r\n            this.refreshProfile()\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Profile {...this.props}\r\n                     isOwner={!this.props.match.params.userID}\r\n                     profile={this.props.profile}\r\n                     status={this.props.status}\r\n                     updateStatus={this.props.updateStatus}\r\n                     savePhoto={this.props.savePhoto}\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    authorizedUserID: state.auth.id,\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {getUserProfile, getStatus, updateStatus, savePhoto, saveProfile}),\r\n    withRouter\r\n)(ProfileContainer)"],"sourceRoot":""}