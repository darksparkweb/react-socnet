{"version":3,"sources":["components/Dialogs/Dialogs.module.css","components/Dialogs/Dialogs.jsx","Hoc/WithAuthRedirect.js","components/Dialogs/DialogsContainer.jsx"],"names":["module","exports","DialogItem","props","path","id","className","s","dialog","active","to","name","Message","message","maxLength100","maxLength","SendMessageRedux","reduxForm","form","onSubmit","handleSubmit","input","Field","component","Textarea","validate","required","placeholder","textarea","cols","rows","button","Dialogs","state","dialogsPage","dialogsElements","dialogs","map","messagesElements","messages","values","sendMessage","newMessageText","mapStateToPropsForRedirect","isAuth","auth","compose","connect","dispatch","sendMessageActionCreator","Component","RedirectComponent","this","React"],"mappings":"2FACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,OAAS,wBAAwB,OAAS,wBAAwB,MAAQ,uBAAuB,OAAS,wBAAwB,SAAW,0BAA0B,QAAU,2B,uICOhOC,EAAa,SAACC,GAChB,IAAIC,EAAO,YAAcD,EAAME,GAE/B,OACI,qBAAKC,UAAWC,IAAEC,OAAS,IAAMD,IAAEE,OAAnC,SACI,cAAC,IAAD,CAASC,GAAIN,EAAb,SAAoBD,EAAMQ,UAKhCC,EAAU,SAACT,GACb,OAAO,qBAAKG,UAAWC,IAAEM,QAAlB,SAA4BV,EAAMU,WA4BvCC,EAAeC,YAAU,KAqBzBC,EAAmBC,YAAU,CAACC,KAAM,eAAjBD,EApBD,SAACd,GAErB,OACI,uBAAMgB,SAAUhB,EAAMiB,aAAcd,UAAWC,IAAEc,MAAjD,UACI,cAACC,EAAA,EAAD,CACIC,UAAWC,IACXC,SAAU,CAACC,IAAUZ,GACrBH,KAAM,iBACNgB,YAAY,6BACZrB,UAAWC,IAAEqB,SACbC,KAAK,KACLC,KAAK,MAET,wBAAQxB,UAAWC,IAAEwB,OAArB,wBASGC,EAhDC,SAAC7B,GAEb,IAAI8B,EAAQ9B,EAAM+B,YAEdC,EAAkBF,EAAMG,QAAQC,KAAI,SAACD,GAAD,OACpC,cAAC,EAAD,CAAYzB,KAAMyB,EAAQzB,KAAuBN,GAAI+B,EAAQ/B,IAAxB+B,EAAQ/B,OAE7CiC,EAAmBL,EAAMM,SAASF,KAAI,SAACE,GAAD,OACtC,cAAC,EAAD,CAAS1B,QAAS0B,EAAS1B,SAAc0B,EAASlC,OAOtD,OACI,sBAAKC,UAAWC,IAAE6B,QAAlB,UACI,8BAAMD,IACN,gCACKG,EACD,cAACtB,EAAD,CAAkBG,SATZ,SAACqB,GACfrC,EAAMsC,YAAYD,EAAOE,0B,uDC9B7BC,EAA6B,SAACV,GAAD,MAAY,CACzCW,OAAQX,EAAMY,KAAKD,S,OCeRE,sBACXC,aAfkB,SAACd,GACnB,MAAO,CACHC,YAAaD,EAAMC,gBAGF,SAACc,GACtB,MAAO,CACHP,YAAa,SAACC,GACVM,EAASC,YAAyBP,UDNd,SAACQ,GAAe,IAEtCC,EAFqC,uKAInC,OAAKC,KAAKjD,MAAMyC,OACT,cAACM,EAAD,eAAeE,KAAKjD,QADI,cAAC,IAAD,CAAUO,GAAG,eAJT,GAEX2C,IAAMH,WAOtC,OAAOH,YAAQJ,EAARI,CAAoCI,KCGhCL,CAGbd","file":"static/js/5.6aa61417.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__3wm-U\",\"active\":\"Dialogs_active__1Bfn_\",\"dialog\":\"Dialogs_dialog__eYwUP\",\"input\":\"Dialogs_input__zo-ga\",\"button\":\"Dialogs_button__1vh7O\",\"textarea\":\"Dialogs_textarea__35Paa\",\"message\":\"Dialogs_message__6Xuw4\"};","import React from \"react\";\r\nimport s from \"./Dialogs.module.css\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {Textarea} from \"../common/FormsControls/formsControls\";\r\nimport {maxLength, required} from \"../../Utils/Validators/validators\";\r\n\r\n\r\nconst DialogItem = (props) => {\r\n    let path = \"/Dialogs/\" + props.id;\r\n\r\n    return (\r\n        <div className={s.dialog + \" \" + s.active}>\r\n            <NavLink to={path}>{props.name}</NavLink>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst Message = (props) => {\r\n    return <div className={s.message}>{props.message}</div>;\r\n};\r\n\r\nconst Dialogs = (props) => {\r\n\r\n    let state = props.dialogsPage;\r\n\r\n    let dialogsElements = state.dialogs.map((dialogs) => (\r\n        <DialogItem name={dialogs.name} key={dialogs.id} id={dialogs.id}/>\r\n    ));\r\n    let messagesElements = state.messages.map((messages) => (\r\n        <Message message={messages.message} key={messages.id}/>\r\n    ));\r\n\r\n    let sendMessage = (values) => {\r\n        props.sendMessage(values.newMessageText);\r\n    };\r\n\r\n    return (\r\n        <div className={s.dialogs}>\r\n            <div>{dialogsElements}</div>\r\n            <div>\r\n                {messagesElements}\r\n                <SendMessageRedux onSubmit={sendMessage}/>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\nconst maxLength100 = maxLength(100)\r\nconst SendMessageForm = (props) => {\r\n\r\n    return (\r\n        <form onSubmit={props.handleSubmit} className={s.input}>\r\n            <Field\r\n                component={Textarea}\r\n                validate={[required, maxLength100]}\r\n                name={\"newMessageText\"}\r\n                placeholder='enter your message here...'\r\n                className={s.textarea}\r\n                cols=\"44\"\r\n                rows=\"4\"\r\n            />\r\n            <button className={s.button}>\r\n                Send\r\n            </button>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst SendMessageRedux = reduxForm({form: 'SendMessage'})(SendMessageForm)\r\n\r\nexport default Dialogs;\r\n","import React from 'react'\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth) return <Redirect to='/login'/>\r\n            return <Component {...this.props}/>\r\n        }\r\n    }\r\n\r\n    return connect(mapStateToPropsForRedirect)(RedirectComponent);\r\n\r\n\r\n}","import {sendMessageActionCreator} from \"../../Redux/dialogsReducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport {withAuthRedirect} from \"../../Hoc/WithAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        dialogsPage: state.dialogsPage\r\n    }\r\n}\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        sendMessage: (newMessageText) => {\r\n            dispatch(sendMessageActionCreator(newMessageText))\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    withAuthRedirect\r\n)(Dialogs)\r\n;\r\n"],"sourceRoot":""}